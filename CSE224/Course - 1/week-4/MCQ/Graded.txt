1.
Question 1
Which of the following contains styles for buttons, lists, grids, images and many other composables?

1 / 1 point

Theme



UI elements



material components



composables


Correct
Correct! Adjusting the value of a Theme’s attributes will apply changes to every screen in the application.

2.
Question 2
.Which color is represented by the following hexadecimal value?

0xFF000000

0 / 1 point

white 



blue 



gray 



black 


Incorrect
Not quite. Please review the video 
Defining colors
.

3.
Question 3
Which of the following correctly creates a text composable with bold text?

1 / 1 point


123456
Text(
    text = “Hello World!”,
    fontSize = 30.sp,
    weight = Bold
)





123456
Text(
    text = “Hello World!”,
    fontSize = 30.sp,
    font = Bold
)





123456
Text(
    text = “Hello World!”,
    fontSize = 30.sp,
    fontWeight = Bold
)





12345
Text(
    fontSize = 30.sp,
    fontWeight = Bold
)



Correct
Correct! A Text composable accepts an optional parameter of fontWeight for styling the text. 

4.
Question 4
Which of the following correctly styles a text composable with a monospaced font?

1 / 1 point


1234
Text(
    style = FontFamily.Monospace
)





12345678
Text(
    style = TextStyle(
        text = “Hello World!”,
        fontSize = 25.sp,
        fontFamily = Monospace
 )
)





12345678
Text(
    style = TextStyle(
        text = “Hello World!”,
        fontSize = 25.sp,
        fontFamily = FontFamily.Monospace
   )
)





12345678
Text(
    style = TextStyle(
        text = “Hello World!”,
        fontSize = 25.sp,
        font = FontFamily.Monospace
    )
)



Correct
Correct! The Text composable accepts a fontFamily parameter for specifying the font family its text will be displayed in.

5.
Question 5
Which of the following correctly adds Text composable as the content for a Surface?

1 / 1 point


12345678
Surface(
    modifier = Modifier
        .fillMaxSize()
    text = “Hello World”,
    fontSize = 30.sp
)         
}




123456789
Surface(
{
    Text(
            text = “Hello World”,
            fontSize = 30.sp      
            )  
}
) 





12345678910
Surface(
    modifier = Modifier
        .fillMaxSize()
) {
    Text(
            text = “Hello World”,
            fontSize = 30.sp      
            )  
}




12345678910
Text(
    modifier = Modifier
        .fillMaxSize()
) {
    Surface(
            text = “Hello World”,
            fontSize = 30.sp      
            )  
}



Correct
Correct! Like layout composables, the Surface composable can have content such as the Text composable.. 

6.
Question 6
Which of the following is an optional modifier that can be used to specify the weight of a text within a Text composable?

1 / 1 point

font



weight



fontWeight



fontSize


Correct
Correct! The Text composable accepts an optional fontWeight parameter for specifying the weight of text.

7.
Question 7
Which of the following is the correct way to align a Surface content of a Text composable to the top left of the screen?

1 / 1 point


1234567891011
Surface(
    modifier = Modifier
        .fillMaxSize()
) {
    Text(
        text = “Hello World!”,
        fontSize = 30.sp,
        modifier = Alignment.TopStart)
        )
}





12345678910111213
Surface(
    modifier = Modifier
        .fillMaxSize()
        .wrapContentSize(align = Alignment.TopStart)

) {
    Text(
        text = “Hello World!”,
        fontSize = 30.sp,
        modifier = Modifier 





123456789101112
Surface(
    modifier = Modifier
        .fillMaxSize()
) {
    Text(
        text = “Hello World!”,
        fontSize = 30.sp,
        modifier = Modifier 
        .wrapContentSize(align = Alignment.TopStart)
        )





123456789
Surface(
    modifier = Modifier
        .fillMaxSize() 
        text = “Hello World!”,
        fontSize = 30.sp,
        modifier = Modifier 
        .wrapContentSize(align = Alignment.TopStart)
)



Correct
Correct! A variety of text alignments can be set using the align parameter of the wrapContentSize modifier.

8.
Question 8
Which of the following improves overall application interactivity, makes products more intuitive and helps attract user attention?

1 / 1 point

UX animation



event listeners



wireframes



styling


Correct
Correct! By bringing the user interface to life, you can improve communication with your users..

9.
Question 9
Which of the following will make the text “Hello World” instantly visible or invisible after a button click?

0 / 1 point

12345678910
var visible by remember {
    mutableStateOf(true)
}
Column {
    AnimatedVisibility(visible) {
        Text(text = “Hello World”)
    }
        Button(onClick = Text(“Button”))            
}




12345678910
var visible by remember {
    mutableStateOf(true)
}
Column {
    if  (visible) {
        Text(text = “Hello World”)
    }
        Button(onClick = Text(“Button”))            
}




123456789101112
var visible by remember {
    mutableStateOf(true)
}
Column {
    if (visible) {
        Text(text = “Hello World”)
    }
        Button(onClick = {  visible = !visible  }) {
            Text(“Button“)
        }




123456789101112
var visible by remember {
    mutableStateOf(true)
}
Column {
    AnimatedVisibility(visible) {
        Text(text = “Hello World”)
    }
        Button(onClick = {  visible = !visible  }) {
            Text(“Button”)
        }



Incorrect
Not quite. Please review the video 
Animated visibility
.

10.
Question 10
Which of the following parameters is used to control how long a given transition will last?

1 / 1 point

exit



AnimatedVisibilty



enter



animationSpec


Correct
Correct! The animation duration is provided in milliseconds. 